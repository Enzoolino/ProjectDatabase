//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WorkshopDataModifier.MVVM.Model
{
    using System;
    using System.Collections.ObjectModel;
    using WorkshopDataModifier.Core;

    /// <summary>
    /// Represents an employee.
    /// </summary>
    public partial class employee : ObservableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="employee"/> class.
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public employee()
        {
            this.users = new ObservableCollection<users>();
            this.sell = new ObservableCollection<sell>();
            this.employee1 = new ObservableCollection<employee>();
        }

        private bool _isSelected;
        /// <summary>
        /// Part of multiselect function that indicates whether the employee is selected.
        /// </summary>
        public bool IsSelected
        {
            get { return _isSelected; }
            set
            {
                _isSelected = value;
                OnPropertyChanged();
            }
        }

        /// <summary>
        /// Gets or sets the ID for the employee.
        /// </summary>
        /// <remarks>
        /// Auto-Incrementing primary key
        /// </remarks>
        public long EmpID { get; set; }

        /// <summary>
        /// Gets or sets the name of the employee.
        /// </summary>
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the surname of the employee.
        /// </summary>
        public string Surname { get; set; }

        /// <summary>
        /// Gets or sets the ID of the superior employee.
        /// </summary>
        public Nullable<long> SuperiorID { get; set; }

        /// <summary>
        /// Gets or sets the ID of the associated branch office.
        /// </summary>
        public Nullable<int> BranchID { get; set; }

        /// <summary>
        /// Gets or sets the work location of the employee.
        /// </summary>
        public string WorkLocation { get; set; }

        /// <summary>
        /// Gets or sets the position of the employee.
        /// </summary>
        public string Position { get; set; }

        /// <summary>
        /// Gets or sets the date when the employee was employed.
        /// </summary>
        public Nullable<System.DateTime> EmployedDate { get; set; }

        /// <summary>
        /// Gets or sets the associated branch office for the employee.
        /// </summary>
        public virtual branch_office branch_office { get; set; }

        /// <summary>
        /// Gets or sets the associated dealership for the employee.
        /// </summary>
        public virtual dealership dealership { get; set; }

        /// <summary>
        /// Gets or sets the collection of associated users for the employee.
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ObservableCollection<users> users { get; set; }

        /// <summary>
        /// Gets or sets the associated position for the employee.
        /// </summary>
        public virtual position position1 { get; set; }

        /// <summary>
        /// Gets or sets the collection of associated sell transactions for the employee.
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ObservableCollection<sell> sell { get; set; }

        /// <summary>
        /// Gets or sets the collection of associated subordinate employees for the employee.
        /// </summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ObservableCollection<employee> employee1 { get; set; }

        /// <summary>
        /// Gets or sets the superior employee for the employee.
        /// </summary>
        public virtual employee employee2 { get; set; }
    }
}
